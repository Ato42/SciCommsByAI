name: Transform, Build & Deploy Jekyll Site

on:
  push:
    branches:
      - Release   # Update to match your actual branch name (e.g., "Release" or "release")
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out the repository (read-only workspace)
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Ruby (required for Jekyll)
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'

      # 3. Install yq (for YAML processing in _config.yml)
      - name: Install yq
        run: |
          wget -q https://github.com/mikefarah/yq/releases/download/v4.30.6/yq_linux_amd64 -O yq
          chmod +x yq
          sudo mv yq /usr/local/bin/yq

      # 4. Transform folders into collections in the workspace and update _config.yml
      - name: Transform folders to collections and update _config.yml
        run: |
          # Define a list of folders to exclude from processing.
          excluded=("ExcludeFolder1" "ExcludeFolder2")
          
          # Loop over each top-level directory
          for d in */ ; do
            # Remove the trailing slash from the folder name.
            folder="${d%/}"
            if [ -d "$folder" ]; then
              # Process folders whose name starts with an uppercase letter (A-Z)
              first_char=$(echo "$folder" | cut -c1)
              if [[ "$first_char" =~ [A-Z] ]]; then
                skip=false
                for ex in "${excluded[@]}"; do
                  if [ "$folder" = "$ex" ]; then
                    echo "Skipping excluded folder: $folder"
                    skip=true
                    break
                  fi
                done
                if [ "$skip" = true ]; then
                  continue
                fi

                # Convert folder name to lowercase and snake_case; then prepend an underscore.
                new_folder=$(echo "$folder" | tr '[:upper:]' '[:lower:]' | sed 's/ /_/g')
                new_folder="_${new_folder}"
                echo "Transforming folder '$folder' to '$new_folder'"
                
                # Rename (move) the folder in the runner's workspace.
                mv "$folder" "$new_folder"
                
                # Derive the collection name (without the leading underscore).
                coll_name="${new_folder#_}"
                
                # Ensure _config.yml has a collections section.
                if ! grep -q "^collections:" _config.yml; then
                  echo "collections:" >> _config.yml
                fi
                
                # Use yq to check if the collection is already defined.
                current_val=$(yq e ".collections.${coll_name}" _config.yml)
                if [ "$current_val" = "null" ]; then
                  echo "Adding collection '$coll_name' to _config.yml"
                  yq e -i ".collections.${coll_name} = {\"output\": true}" _config.yml
                else
                  echo "Collection '$coll_name' already exists in _config.yml"
                fi
              fi
            fi
          done

      # 5. Configure Pages (prepares the environment for the build)
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 6. Build the Jekyll site (the build uses the transformed workspace)
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      # 7. Upload the built site as an artifact (to be used by the deploy job)
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Download the artifact from the build job
      - name: Download artifact
        uses: actions/download-pages-artifact@v3

      # Deploy the site to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
